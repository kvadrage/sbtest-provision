---
- name: check if node is undefined
  fail:
    msg: "{{inventory_hostname}} is not defined properly in vars"
  when: node is not defined or inventory_hostname not in node|default({})
  tags:
    - services

- name: create services vars
  set_fact:
    node_services: "{{ {} | combine(global.services|default({}),
                            node[inventory_hostname].services|default({})) }}"
  tags:
    - services

- name: setup timezone
  lineinfile:
    dest: "{{clock_file}}"
    regexp: "^ZONE="
    line: "ZONE={{node_services.clock.timezone}}"
  when: node_services.clock is defined and node_services.clock.timezone is defined
  notify:
    - update timezone
  tags:
    - time
    - services

- name: setup NTP
  template: src=ntp.j2 dest="{{ntp_file}}"
  when: node_services.clock is defined and node_services.clock.ntp is defined
  notify:
    - restart NTP
  tags:
    - time
    - ntp
    - services

- name: setup syslog
  blockinfile:
    dest: "{{syslog_file}}"
    block: |
      # remote syslog to {{node_services.syslog.server}}
      *.*  @{{node_services.syslog.server}}
  when: node_services.syslog is defined and node_services.syslog.server is defined
  notify:
    - restart syslog
  tags:
    - syslog
    - services

- name: setup Zabbix Agent
  template: src=zabbix_agentd.j2 dest={{zabbix_agent_file}}
  when: node_services.zabbix is defined
  notify:
    - restart Zabbix Agent
  tags:
    - zabbix
    - services

- name: setup AAA
  template: src="{{item.template}}" dest="{{item.file}}"
  with_items:
    - { template: "nsswitch.j2", file: "{{nsswitch_file}}" }
    - { template: "pamd_sshd.j2", file: "{{pamd_sshd_file}}" }
    - { template: "pam_radius_auth.j2", file: "{{pam_radius_file}}" }
  when: node_services.aaa is defined
  notify:
    - restart sshd
  tags:
    - aaa
    - services

- name: add AAA user
  user:
    name: "{{aaa_user}}"
    shell: /bin/bash
    comment: AAA user
  when: node_services.aaa is defined
  tags:
    - aaa
    - services

- name: render AAA user .bashrc
  template: src="aaa_user_bashrc.j2" dest="{{aaa_user_bashrc_file}}" owner="{{aaa_user}}"
  when: node_services.aaa is defined
  tags:
    - aaa
    - services

- name: get AAA user passwd line
  command: getent passwd "{{aaa_user}}"
  register: getent_passwd
  changed_when: False
  when: node_services.aaa is defined
  tags:
    - aaa
    - services

- name: add AAA user to libnss-ato config
  template: src="libnss-ato.j2" dest="{{libnss_ato_file}}"
  when: node_services.aaa is defined
  tags:
    - aaa
    - services
